parameters:
  - name: stages
    type: stageList
    default: []

  - name: versioning
    type: object
    default: {}

  - name: reddog
    type: object
    default: {}
  
  - name: cloudvault
    type: object
    default: {}
  
  - name: nugetPublishing
    type: object
    default: {}

  - name: upackPublishing
    type: object
    default: {}

  - name: globalSdl
    type: object
    default: {}

  - name: git
    type: object
    default: {}

  - name: onebranchToolsetTag
    type: string
    default: ""

  - name: useTestSdlExtension
    type: boolean
    default: false

  - name: retryWatcher
    type: object
    default: {}

  - name: featureFlags # experimental features
    type: object
    default: {}

  - name: customTags
    type: string
    default: ""

  - name: platform
    type: object

extends: 
  template: Core.Template.yml
  parameters:
    ${{ if eq(parameters.platform.name, 'onebranch') }}:
      stages: ${{ parameters.stages }}
      versioning: ${{ parameters.versioning }}
      cloudvault: ${{ parameters.cloudvault }}
      globalSdl: ${{ parameters.globalSdl }}
      git: ${{ parameters.git }}
      onebranchToolsetTag: ${{ parameters.onebranchToolsetTag }}
      useTestSdlExtension: ${{ parameters.useTestSdlExtension }}
      retryWatcher: ${{ parameters.retryWatcher }}
      featureFlags: ${{ parameters.featureFlags }}
      customTags: ${{ parameters.customTags }}
      nugetPublishing: ${{ parameters.nugetPublishing }}
      upackPublishing: ${{ parameters.upackPublishing }}
      reddog: ${{ parameters.reddog }}
      platform: ${{ parameters.platform }}
      mainPool:
        ${{ if and( eq(variables['System.TeamProjectId'], 'c978ac10-fc79-4879-9a73-42adb531be5f'), eq(parameters.featureFlags.useValidationPool, true) ) }}:
          name: OneBranchPipelines-Validation
        ${{ if or( ne(variables['System.TeamProjectId'], 'c978ac10-fc79-4879-9a73-42adb531be5f'), ne(parameters.featureFlags.useValidationPool, true) ) }}:
          name: OneBranchPipelines
        HostTenant: AME
        ${{ if eq( parameters.featureFlags.useStandardSKU, 'false' ) }}:
          RepositoryId: ${{ parameters.featureFlags.skuRepositoryId }}
        # Generic host version flag to pass through any value, which must have corresponding entry in Pool Provider to be valid
        ${{ if ne( parameters.featureFlags.WindowsHostVersion, '') }}:
          WindowsHostVersion: ${{ parameters.featureFlags.WindowsHostVersion}}
        ${{ if ne( parameters.featureFlags.LinuxHostVersion, '') }}:
          LinuxHostVersion: ${{ parameters.featureFlags.LinuxHostVersion}}
        ${{ if eq( parameters.featureFlags.useUbuntu2004, 'true' ) }}:
          HostVersion: Ubuntu2004

    ${{ elseif eq(parameters.platform.name, 'packagees') }}:
      stages: ${{ parameters.stages }}
      versioning: ${{ parameters.versioning }}
      cloudvault: ${{ parameters.cloudvault }}
      globalSdl: ${{ parameters.globalSdl }}
      git: ${{ parameters.git }}
      onebranchToolsetTag: ${{ parameters.onebranchToolsetTag }}
      useTestSdlExtension: ${{ parameters.useTestSdlExtension }}
      retryWatcher: ${{ parameters.retryWatcher }}
      featureFlags: ${{ parameters.featureFlags }}
      customTags: ${{ parameters.customTags }}
      nugetPublishing: ${{ parameters.nugetPublishing }}
      upackPublishing: ${{ parameters.upackPublishing }}
      reddog: {}
      platform: ${{ parameters.platform }}
      mainPool:
        name: PackageESPipelines
        HostTenant: AME

    ${{ elseif eq(parameters.platform.name, 'm365') }}:
      stages: ${{ parameters.stages }}
      isOfficial: false
      platform: ${{ parameters.platform }}
      mainPool:
        name: m365 # unused required parameter

    ${{ else }}:
      error: "Platform is not set. Possible values 'onebranch', 'packageES', 'm365'"