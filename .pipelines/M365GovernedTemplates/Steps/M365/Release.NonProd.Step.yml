parameters:
  - name: azureSubscriptionId
    type: string  

  - name: serviceTreeId
    type: string

  - name: serviceGroupName
    type: string
  
  - name: workload
    type: string

  - name: cloudName
    type: string

  - name: steps
    type: stepList
    default: []

  - name: releaseEnvironment
    type: string

  - name: ev2Environment
    type: string

  - name: phase
    type: string

  - name: serviceType
    type: string
  
  - name: stageType
    type: string
  
  - name: allowedTasks
    type: object
    default:  
      - ExpressV2Internal@1
      - vsrm-ev2.vss-services-ev2.adm-release-task.ExpressV2Internal@1 # this is because multiple versions of tasks exists in certain accounts like onebranch
      - CmdLine@2
      - PowerShell@2
      - 30f35852-3f7e-4c0c-9a88-e127b4f97211@1    # download alias/keyword for downloading pipeline artifacts
      - comic_deployment_priming_prod_with_onebranch@0
      - artifactDropDownloadTask@0

  - name: allowedDeploymentTasks
    type: object
    default:  
      - ExpressV2Internal@1

steps:

- ${{each step in parameters.steps}}:
  - ${{if eq(containsValue(parameters.allowedTasks, step.task), false)}}:
    - "${{step.task}} is not part of allowed tasks list." : error

- ${{each step in parameters.steps}}:
  - ${{if eq(containsValue(parameters.allowedDeploymentTasks, step.task), true)}}:
#We ensure that the Lockbox approval flow was added for every deployment task
    - ${{ if ne(parameters.stageType, 'deployment') }}:
      - "${{step.task}} is a deployment task. Please define the stage_type as 'deployment' when including deployment tasks in stage jobs" : error

- ${{ each step in parameters.steps }}:
  - ${{ if contains(step.task, 'ExpressV2Internal')}}:
    - ${{ if eq(step.inputs.OutputRolloutId, '')}}:
      - "Ev2 task must contain non-empty value for Output variable: OutputRolloutId ": error

#Adding Dot net framework installation required by the Lockbox Get Credentials task
#Will be removed once the agents provisioned have the Dot net framework installated by default
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
#Lockbox Get Credentials task
    - task: lockbox-get-credentials-prod_with_onebranch@1
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        ServiceTreeId: ${{parameters.serviceTreeId}}
        ServiceGroupName: ${{parameters.serviceGroupName}}
      inputs:
        cloud: ${{parameters.cloudName}} # default is'public'
        endpointType: 'ev2'
        ev2Connection: ${{step.inputs.ConnectedServiceName}}
        subscriptionid: ${{parameters.azureSubscriptionId}}
        targetring: '0'

    - ${{ each property in step }}:
        ${{ property.key }}: ${{ property.value }}

    - script: |
        echo 'connectedServiceName: Hera ingestion connection'
        echo 'environment:' ${{parameters.cloudName}}
        echo 'workload:' ${{parameters.workload}}
        echo 'releaseId:' $(Build.BuildId) 
        echo 'rolloutId:' $(${{step.inputs.OutputRolloutId}})
        echo 'serviceGroupName:' ${{parameters.serviceGroupName}}
        echo 'lockboxId: LockboxRequestId'
        echo 'serviceTreeId:' ${{parameters.serviceTreeId}}
        echo 'buildId:' $(resources.pipeline.PrimaryArtifact.runId)
        echo 'buildNumber:' $(resources.pipeline.PrimaryArtifact.runName)
        echo 'phase:' ${{parameters.heraPhase}}
        echo 'dataType:' ${{parameters.serviceType}} 
        echo 'sourceImage:' ${{variables.SourceImages}}
        echo 'sourceImage:' $(SourceImages)
        echo 'ev2Environment:' ${{parameters.ev2Environment}}

    - ${{ if not(or(eq(parameters.cloudName, 'USSec'), eq(parameters.cloudName, 'USNat'), eq(parameters.releaseEnvironment, 'dev'), eq(parameters.releaseEnvironment, 'test')))}}:
      - task: IngestDeploymentDataToHera@0
        inputs:
          connectedServiceName: 'Hera ingestion connection'
          environment: ${{parameters.cloudName}}
          workload: ${{parameters.workload}}
          releaseId: $(Build.BuildId)
          rolloutId: $(${{step.inputs.OutputRolloutId}})
          serviceGroupName: ${{parameters.serviceGroupName}}
          lockboxId: LockboxRequestId
          serviceTreeId: ${{parameters.serviceTreeId}}
          buildId: $(resources.pipeline.PrimaryArtifact.runId)
          buildNumber: $(resources.pipeline.PrimaryArtifact.runName)
          phase: ${{parameters.phase}}
          dataType: ${{parameters.serviceType}}
          sourceImage: $(SourceImages)
          ev2Environment: ${{parameters.ev2Environment}}
  
  - ${{ if not(contains(step.task, 'ExpressV2Internal'))}}:
    - ${{ each property in step }}:
        ${{ property.key }}: ${{ property.value }}
